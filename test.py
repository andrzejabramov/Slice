import re

#https://python-scripts.com/sets#create-sets

descript = 'Выберите цифру для просмотра метода словарей:\n' \
'1 создания словаря с помощью литерала\n' \
'2 создания словаря с помощью функции dict\n' \
'3 создания словаря с помощью метода fromkeys (значения ключей по умолчанию)\n' \
'4 создания словаря с помощью архива zip\n' \
'5 создания словаря с помощью генераторов словарей\n' \
'6 создание словаря методом копирования copy()\n' \
'7 получение значений из словаря по ключу\n' \
'8 получение значения None (исключение ошибки) по несуществующему ключу методом get()\n' \
'9 получение списка ключей словаря\n' \
'10 получение списка значений словаря\n' \
'11 получение списка кортежей ключ-значение\n' \
'12 получение различных элементов словаря при помощи итерации\n' \
'13 сортировка элементов словаря\n' \
'14 обрезка словаря\n' \
'15 добавление в словарь пары ключ-значение\n' \
'16 обновление словаря методом update\n' \
'17 чтение и/или добавление пары ключ-значение методом setdefault()\n' \
'18 удаление пары ключ-значение из словаря методом del()\n' \
'19 очищение словаря от всех данных методом clear()\n' \
'20 удаление пары ключ-значение и получение удаленного значения словаря методом pop()\n' \
'21 удаление и получение последней пары ключ-значение словаря методом popitem()\n' \
'22 получение длины словаря\n' \
'23 применение метода dir() словаря\n' \
'24 создание множества вручную\n' \
'25 создвние множества из списка методом set()\n' \
'26 создание пустого множества\n' \
'27 доступ к элементам множества с помощью цикла\n' \
'28 проверка наличия элемента множества\n' \
'29 добавление элемента множества\n' \
'30 удаление элементов множества методом discard()\n' \
'31 удаление элементов множества методом remove()\n' \
'32 удаление элементов множесива и возврат удаленных/оставшихся методом pop()\n' \
'33 удаление элементов множества методом clear()\n' \
'34 объединение множеств методом union()\n' \
'35 пересечение множеств методом intersection() или &\n' \
'36 определение является ли множество пересечением методом isdisjoint()\n' \
'37 определение разницы множеств методами difference() и symmetric_difference()' \
'38 сравнене множеств\n' \
'39 копирование множеств методом copy()\n' \
'40 определение длины множества методом len()\n' \
'41 замороженное множество с помощью метода frozenset()\n'


# def recur(n):
#     if n == 1:
#         return 1
#     return n - recur(n-1)
#
# print(recur(5))

def desc(descript):
    num_method = []
    for row in descript:
        if row == '\n':
            st = descript.find('\n') + 1
            descript = descript[st:]
            en = descript.find(' ')
            res = descript[:en]
            if res != '':
                num_method.append(res)
    return [num_method[-1]]

print(desc(descript))